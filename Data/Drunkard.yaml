%YAML:1.0

# Camera calibration and distortion parameters
# 320x320 drunkard
# Camera.fx: 190.68059285
# Camera.fy: 286.02088928
# Camera.cx: 160.0
# Camera.cy: 160.0

# 1024x1024 drunkard
Camera.fx: 610.17789714
Camera.fy: 915.2668457
Camera.cx: 512.0
Camera.cy: 512.0

Camera.k1: 0.0
Camera.k2: 0.0
Camera.p1: 0.0
Camera.p2: 0.0

#640x480 freiburg
# Camera.fx: 517.306408
# Camera.fy: 516.469215
# Camera.cx: 318.643040
# Camera.cy: 255.313989

# Camera.k1: 0.262383
# Camera.k2: -0.953104
# Camera.p1: -0.005358
# Camera.p2: 0.002628
# Camera.k3: 1.163314

# Camera resolution
# Camera.cols: 320
# Camera.rows: 320
Camera.cols: 1024
Camera.rows: 1024
# Camera.cols: 640
# Camera.rows: 480

# Number of features per image
FeatureExtractor.nFeatures: 1000

# Number of levels in the scale pyramid
FeatureExtractor.nScales: 8

# Scale factor between levels in the scale pyramid
FeatureExtractor.fScaleFactor: 1.2

# Feature grid dimensions
FeatureGrid.nGridCols: 64
FeatureGrid.nGridRows: 48

#Essential Matrix threshold
#Epipolar.th: 0.002
Epipolar.th: 0.5

#Feature matching Hamming distance thresholds
Matching.initialization: 30
Matching.guidedMatching: 50
Matching.searchByProjection: 100
Matching.searchForTriangulation: 50
Matching.fuse: 50

#radius
Matching.initialization.radius: 90

#Covisivility graph
Map.minObs: 15

#Min cos parallax to triangulate
#Triangulation.minCos: 0.9962
# Triangulation.minCos: 0.9978
Triangulation.minCos: 0.9989
# Triangulation.minCos: 0.9995
# Triangulation.minCos: 0.9991
#0.99998

# LUIS
#Cameras poses
Camera.FirstPose.x: 0.0
Camera.FirstPose.y: 0.0
Camera.FirstPose.z: 0.0
Camera.SecondPose.x: 0.14
Camera.SecondPose.y: 0.01
Camera.SecondPose.z: 0.06

#Simulated typical desviation reprojection error for keypoints
Keypoints.RepError: 1.0
Keypoints.decimalsApproximation: 1

#Simulated typical desviation depth measurements error (mm)
Measurements.DepthError: 0.0
Measurements.DepthScale.C1: 0.0004577706569009
Measurements.DepthScale.C2: 0.0004577706569009
Measurements.Depth.Scale: 0.0004577706569009
#0.0004577706569009
#0.00012  580-595 000000/level0
#0.000315 580-596 000000/level1
#0.00046  580-596 000000/level2
#0.00061  580-593 000000/level3
#0.00075

# 100000000: 3 stand
# 90000: 6.38
# 1000: 14 stand
# 1.5: 0 stand
# 10000000: 3 stand
#Weights for optimization
Optimization.rep: 1
Optimization.global: 100
Optimization.arap: 10000
# Optimization.arap: 0.1
Optimization.alpha:  1
Optimization.beta: 1

#Optimization values
Optimization.numberOfOptimizations: 3
Optimization.numberOfIterations: 30

Optimization.selection: "twoOptimizations" # g2oArap or open3DArap or twoOptimizations
Optimization.weightsSelection: "nlopt" # nlopt or eigen

Optimization.nlopt.numberOfIterations: 30
Optimization.nlopt.relTolerance: 1.5e-1
Optimization.nlopt.absTolerance: 1.5e-1
Optimization.nlopt.rep.lowerBound: 1
Optimization.nlopt.rep.upperBound: 1
# Optimization.nlopt.global.lowerBound: 50
# Optimization.nlopt.global.upperBound: 50
# Optimization.nlopt.arap.lowerBound: 0.00000001
# Optimization.nlopt.arap.upperBound: 10000000
Optimization.nlopt.global.lowerBound: 100
Optimization.nlopt.global.upperBound: 100
Optimization.nlopt.arap.lowerBound: 0.000000001
Optimization.nlopt.arap.upperBound: 100000000

Experiment.Filepath: "./Data/Experiment.txt"

#Method selection
Triangulation.method: "NRSLAM" # Classic NRSLAM ORBSLAM
# Classic: Use standard triangulation calculation
# NRSLAM: use NRSLAM weighted midpoint method
# ORBSLAM: use ORBSLAM linear method
# DepthMeasurement: use depth measurements 
Triangulation.seed.location: "TwoPoints"
# inRays: SVD triangulation method, choosing the points nearest to the solution in both rays
# TwoPoints: SVD triangulation method, choosing both points as the solution
# FarPoints: Use points far from the rays, with the same distance to the triangulated point but in the other direction


# Visualization
MapVisualizer.showScene: "true"
MapVisualizer.drawRays: "false"
Visualizer.showSolution: "false"
Execution.stop: "true"
